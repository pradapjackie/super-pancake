name: 🥞 Super Pancake Framework CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: 📦 Install dependencies
      run: npm install
      
    - name: 🔍 Run linting (if available)
      run: |
        if npm run lint --silent 2>/dev/null; then
          npm run lint
        else
          echo "No lint script found, skipping..."
        fi
      continue-on-error: false
      
    - name: 🧪 Run all tests
      run: npm run test:all-no-server
      env:
        NODE_ENV: test
        CI: true
        
    - name: 📊 Generate test report
      run: npm run test:report
      if: always()
      
    - name: 📋 Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-node-${{ matrix.node-version }}
        path: |
          test-report.html
          TEST_REPORT.md
          automationTestReport.html
        retention-days: 30
        
    - name: 📈 Comment test results on PR
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request' && always()
      with:
        script: |
          const fs = require('fs');
          
          try {
            const reportPath = 'TEST_REPORT.md';
            if (fs.existsSync(reportPath)) {
              const report = fs.readFileSync(reportPath, 'utf8');
              
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: "## 🧪 Test Results (Node.js ${{ matrix.node-version }})\n\n" + report + "\n\n[📊 View detailed HTML report in artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})"
              });
            }
          } catch (error) {
            console.log('Could not post test results:', error.message);
          }

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        
    - name: 📦 Install dependencies
      run: npm install
      
    - name: 🔍 Run npm audit
      run: npm audit --audit-level moderate
      continue-on-error: true

  report-status:
    name: 📊 Report Status
    runs-on: ubuntu-latest
    needs: [test, security-scan]
    if: always()
    
    steps:
    - name: 📊 Report workflow status
      run: |
        echo "## 🏁 CI Workflow Summary"
        echo "- Tests: ${{ needs.test.result }}"
        echo "- Security: ${{ needs.security-scan.result }}"
        
        if [ "${{ needs.test.result }}" = "success" ]; then
          echo "✅ All tests passed - ready for merge"
        else
          echo "❌ Tests failed - check logs for details"
          exit 1
        fi