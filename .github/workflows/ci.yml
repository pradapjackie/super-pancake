name: Super Pancake CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  quick-tests:
    name: Quick Tests (Unit & Config)
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run quick unit tests
      run: npm run test:unit-stable
      
    - name: Run configuration tests
      run: npm run test:config
      
    - name: Run performance tests
      run: npm run test:performance-stable

  tier1-core-features:
    name: TIER 1 Core Features
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: quick-tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Setup Chrome for testing
      uses: browser-actions/setup-chrome@v1
      with:
        chrome-version: stable
        
    - name: Verify Chrome installation
      run: |
        google-chrome --version
        which google-chrome
        
    - name: Kill any existing Chrome processes
      run: |
        pkill -f "chrome.*remote-debugging-port" || true
        rm -rf /tmp/chrome-automation-test || true
        
    - name: Run TIER 1 Smart Locators test
      run: npm test tests/tier1-smart-locators.test.js --run
      env:
        HEADED: false
        
    - name: Run TIER 1 Advanced Waiting test
      run: npm test tests/tier1-advanced-waiting.test.js --run
      env:
        HEADED: false
        
    - name: Run TIER 1 Keyboard Actions test
      run: npm test tests/tier1-keyboard-actions.test.js --run
      env:
        HEADED: false
        
    - name: Upload test screenshots
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: tier1-test-screenshots
        path: screenshots/
        retention-days: 7

  comprehensive-stability:
    name: Comprehensive Stability Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: tier1-core-features
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Setup Chrome for testing
      uses: browser-actions/setup-chrome@v1
      with:
        chrome-version: stable
        
    - name: Kill any existing Chrome processes
      run: |
        pkill -f "chrome.*remote-debugging-port" || true
        rm -rf /tmp/chrome-automation-test || true
        
    - name: Run stability test suite
      run: npm run test:stability
      env:
        HEADED: false
        
    - name: Run long-running stability test
      run: npm run test:long-running
      env:
        HEADED: false
        
    - name: Run network failure simulation
      run: npm run test:network
      env:
        HEADED: false
        
    - name: Run browser stability test
      run: npm run test:browser
      env:
        HEADED: false
        
    - name: Generate stability report
      if: always()
      run: npm run report:stability
      
    - name: Upload stability report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: stability-report
        path: |
          performance-report.json
          automationTestReport.html
        retention-days: 30
        
    - name: Upload comprehensive screenshots
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: comprehensive-test-screenshots
        path: screenshots/
        retention-days: 30

  security-tests:
    name: Security Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: quick-tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security tests
      run: npm run test:security
      
    - name: Run error handling tests
      run: npm run test:errors