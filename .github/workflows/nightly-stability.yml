name: Nightly Stability Tests

on:
  schedule:
    # Run every night at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      test_suite:
        description: 'Test suite to run'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - stability-only
        - performance-only
        - long-running-only

jobs:
  nightly-stability:
    name: Nightly Stability Suite
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    strategy:
      matrix:
        node-version: [18, 20]
        chrome-version: [stable, beta]
      fail-fast: false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm i
      
    - name: Setup Chrome ${{ matrix.chrome-version }}
      uses: browser-actions/setup-chrome@v1
      with:
        chrome-version: ${{ matrix.chrome-version }}
        
    - name: Chrome version info
      run: |
        google-chrome --version
        which google-chrome
        
    - name: Clean environment
      run: |
        pkill -f "chrome.*remote-debugging-port" || true
        rm -rf /tmp/chrome-automation-test || true
        rm -rf test-screenshots/* || true
        
    - name: Run all stability tests
      if: inputs.test_suite == 'all' || inputs.test_suite == '' || github.event_name == 'schedule'
      run: npm run test:all-stability
      env:
        HEADED: false
        NODE_VERSION: ${{ matrix.node-version }}
        CHROME_VERSION: ${{ matrix.chrome-version }}
        
    - name: Run stability tests only
      if: inputs.test_suite == 'stability-only'
      run: |
        npm run test:stability
        npm run test:network
        npm run test:browser
      env:
        HEADED: false
        
    - name: Run performance tests only
      if: inputs.test_suite == 'performance-only'
      run: |
        npm run test:performance
        npm run test:benchmarks
      env:
        HEADED: false
        
    - name: Run long-running tests only
      if: inputs.test_suite == 'long-running-only'
      run: npm run test:long-running
      env:
        HEADED: false
        
    - name: Generate comprehensive report
      if: always()
      run: |
        npm run report:stability
        npm run test:report
        
    - name: Upload comprehensive results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: nightly-results-node${{ matrix.node-version }}-chrome${{ matrix.chrome-version }}-${{ github.run_number }}
        path: |
          performance-report.json
          automationTestReport.html
          sample-test-report.html
          screenshots/
          test-screenshots/
          *.log
        retention-days: 30
        
    - name: Check test success rate
      if: always()
      run: |
        if [ -f "performance-report.json" ]; then
          SUCCESS_RATE=$(node -e "
            const report = JSON.parse(require('fs').readFileSync('performance-report.json', 'utf8'));
            const rate = (report.passed / report.total) * 100;
            console.log(Math.round(rate));
          ")
          echo "Test success rate: ${SUCCESS_RATE}%"
          if [ "$SUCCESS_RATE" -lt 80 ]; then
            echo "::warning::Test success rate ($SUCCESS_RATE%) is below 80% threshold"
          fi
        fi

  nightly-report:
    name: Generate Nightly Report
    runs-on: ubuntu-latest
    needs: nightly-stability
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts
        
    - name: Generate summary report
      run: |
        echo "# Nightly Stability Test Report" > NIGHTLY_REPORT.md
        echo "Date: $(date)" >> NIGHTLY_REPORT.md
        echo "" >> NIGHTLY_REPORT.md
        echo "## Test Matrix Results" >> NIGHTLY_REPORT.md
        ls -la artifacts/ >> NIGHTLY_REPORT.md
        
    - name: Upload summary report
      uses: actions/upload-artifact@v4
      with:
        name: nightly-summary-${{ github.run_number }}
        path: NIGHTLY_REPORT.md
        retention-days: 90