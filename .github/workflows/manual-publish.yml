name: 🚀 Manual Publish Package

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version increment type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      release_notes:
        description: 'Release notes (optional)'
        required: false
        type: string
      force_publish:
        description: 'Force publish even if version unchanged'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  packages: write
  pull-requests: write

jobs:
  verify-tests:
    name: 🧪 Verify Tests Before Publish
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: 📦 Install dependencies
        run: npm install --legacy-peer-deps

#      - name: 🧪 Run meaningful test suite
#        run: npm test
#        env:
#          NODE_ENV: production
#          CI: true
#
#      - name: 📋 Upload test screenshots
#        uses: actions/upload-artifact@v4
#        with:
#          name: test-screenshots
#          path: |
#            screenshots/
#          retention-days: 90

  bump-version:
    name: 🏷️ Bump Version
    runs-on: ubuntu-latest
    needs: verify-tests
    outputs:
      new-version: ${{ steps.bump.outputs.new-version }}
      old-version: ${{ steps.bump.outputs.old-version }}

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: 🔧 Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: 🏷️ Bump version
        id: bump
        run: |
          OLD_VERSION=$(node -p "require('./package.json').version")
          NEW_VERSION=$(npm version ${{ github.event.inputs.version_type }} --no-git-tag-version)
          
          echo "old-version=$OLD_VERSION" >> $GITHUB_OUTPUT
          echo "new-version=$NEW_VERSION" >> $GITHUB_OUTPUT
          
          echo "📋 Bumped version from $OLD_VERSION to $NEW_VERSION"

      - name: 💾 Commit version bump
        run: |
          git add package.json
          git commit -m "chore: bump version to ${{ steps.bump.outputs.new-version }} [skip ci]"
          git tag ${{ steps.bump.outputs.new-version }}
          git push origin HEAD --tags
          git push origin HEAD

  publish:
    name: 🚀 Publish to NPM
    runs-on: ubuntu-latest
    needs: [verify-tests, bump-version]
    environment:
      name: production

    steps:
      - name: 📥 Checkout repository with latest changes
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true
          ref: main

      - name: 🔄 Pull latest changes
        run: git pull origin main

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: 'https://registry.npmjs.org'

      - name: 📦 Install dependencies
        run: npm install

      - name: 🧪 Final test run
        run: npm test
        env:
          NODE_ENV: production
          CI: true

      - name: 🔍 Verify package contents
        run: |
          echo "📋 Main package contents:"
          npm pack --dry-run

      - name: 🚀 Publish main package
        run: |
          echo "🚀 Publishing super-pancake-automation@${{ needs.bump-version.outputs.new-version }}..."
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-release:
    name: 🏷️ Create GitHub Release
    runs-on: ubuntu-latest
    needs: [verify-tests, bump-version, publish]
    if: needs.publish.result == 'success'

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 📊 Download test report
        uses: actions/download-artifact@v4
        with:
          name: pre-publish-test-results

      - name: 🏷️ Create release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.bump-version.outputs.new-version }}
          name: "🥞 ${{ needs.bump-version.outputs.new-version }}"
          body: |
            ## 🚀 Super Pancake Framework ${{ needs.bump-version.outputs.new-version }}
            
            **Previous version:** ${{ needs.bump-version.outputs.old-version }}
            **Version type:** ${{ github.event.inputs.version_type }}
            
            ### Release Notes
            ${{ github.event.inputs.release_notes }}
            
            This release has been manually published after comprehensive testing.
            
            ### ✅ Test Coverage Summary
            - 🧪 Meaningful integration and example tests
            - 🌐 Real web automation scenarios  
            - 📡 API testing with live endpoints
            - 🎯 Practical assertion examples
            - 🔧 Framework functionality validation
            - 🌐 Cross-platform compatibility (Node.js 18.x, 20.x)
            
            ### 📦 Installation
            ```bash
            # Install globally
            npm install -g super-pancake-automation
            
            # Generate sample tests
            super-pancake-generate
            
            # Or add to existing project  
            npm install super-pancake-automation
            ```
            
            ### 🔗 Links
            - 📋 [Test Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            - 📚 [Documentation](https://github.com/${{ github.repository }}#readme)
            - 🐛 [Report Issues](https://github.com/${{ github.repository }}/issues)
            
            ---
            *This release was automatically created by GitHub Actions after all tests passed.*
          draft: false
          prerelease: false

  notify-success:
    name: 📢 Notify Success
    runs-on: ubuntu-latest
    needs: [verify-tests, bump-version, publish, create-release]
    if: always() && needs.publish.result == 'success'

    steps:
      - name: 🎉 Success notification
        run: |
          echo "🎉 Successfully published Super Pancake Framework!"
          echo "📦 Version: ${{ needs.bump-version.outputs.new-version }}"
          echo "🔗 NPM: https://www.npmjs.com/package/super-pancake-automation"
          echo "🏷️ Release: https://github.com/${{ github.repository }}/releases/tag/${{ needs.bump-version.outputs.new-version }}"
